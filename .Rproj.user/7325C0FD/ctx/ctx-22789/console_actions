{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2
    ],
    "data": [
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "# use spread across the weekdays and by gender",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot(aes(x = weekday, fill = gender))+",
        "+ ",
        "  geom_bar()+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by weekday and gender\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "    ",
        "+ ",
        "  )",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot()+",
        "+ ",
        "  geom_bar(aes(x = month(), fill = type), position = \"dodge\")+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by weekday and type\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "   ",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_bar()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `as.POSIXlt()`:\u001B[22m\n\u001B[33m!\u001B[39m argument \"x\" is missing, with no default\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m 19. \u001B[39m\u001B[1mlubridate\u001B[22m:::month.default()\n\u001B[90m 21. \u001B[39m\u001B[1mbase\u001B[22m::as.POSIXlt(x, tz = tz(x))\n",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot()+",
        "+ ",
        "  geom_bar(aes(x = month, fill = type), position = \"dodge\")+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by weekday and type\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "   ",
        "+ ",
        "  )",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot()+",
        "+ ",
        "  geom_bar(aes(x = month, fill = type))+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by weekday and type\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "   ",
        "+ ",
        "  )",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot()+",
        "+ ",
        "  geom_bar(aes(x = weekday, fill = type))+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by weekday and type\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "   ",
        "+ ",
        "  )",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df) %>% group_by(start_stations)",
        "\u001B[1m\u001B[33mError\u001B[39m in `group_by()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Must group by variables found in `.data`.\n\u001B[31m✖\u001B[38;5;254m Column `start_stations` is not found.\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39mas_tibble(nyc_bikes_df) %>% group_by(start_stations)\n\u001B[90m 3. \u001B[39m\u001B[1m\u001B[94mdplyr:::group_by.data.frame(\u001B[39m\u001B[22m., start_stations\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station)",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n())",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count) %>% head(n = 10)",
        "Error: Incomplete expression: nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count) %>% head(n = 10)\n",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10)",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station))+geom_bar()",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "   theme(axis.text = element_text(size = 12)) +",
        "+ ",
        "  scale_fill_manual(values = colour_scheme) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"\\nBike hires by date\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "   theme(axis.text = element_text(size = 12)) +",
        "+ ",
        "  scale_fill_manual(values = colour_scheme) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"\\nBike hires by date\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  ",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "   labs(title = \"\\nBike hires by date\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "  theme(axis.text = element_text(size = 12)) +",
        "+ ",
        "  scale_fill_manual(values = colour_scheme) +",
        "+ ",
        "  theme_minimal() +",
        "Error: Incomplete expression:   theme(axis.text = element_text(size = 12)) +\n  scale_fill_manual(values = colour_scheme) +\n  theme_minimal() +\n",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nBike hires by date\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(tsibbledata)",
        "> ",
        "library(tsibble)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(sf)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(leaflet)",
        "> ",
        "library(skimr)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_df <- nyc_bikes",
        "> ",
        "",
        "> ",
        "colour_scheme <-  c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")",
        "> ",
        "nyc_bikes_df <- nyc_bikes_df %>% ",
        "+ ",
        "  mutate(year = year(start_time),",
        "+ ",
        "        month = month(start_time, label = TRUE, abbr = TRUE),",
        "+ ",
        "        day = day(start_time, label = TRUE, abbr = TRUE),",
        "+ ",
        "        weekday = wday(start_time, label = TRUE, abbr = FALSE))",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;254m\u001B[36mℹ\u001B[38;5;254m In argument: `day = day(start_time, label = TRUE, abbr = TRUE)`.\u001B[39m\n\u001B[1mCaused by error in `day()`:\u001B[22m\n\u001B[33m!\u001B[39m unused arguments (label = TRUE, abbr = TRUE)\nBacktrace:\n\u001B[90m 1. \u001B[39mnyc_bikes_df %>% ...\n\u001B[90m 3. \u001B[39m\u001B[1m\u001B[94mdplyr:::mutate.data.frame(\u001B[39m\u001B[22m...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n\u001B[90m 4. \u001B[39mdplyr:::mutate_cols(.data, dplyr_quosures(...), by)\n\u001B[90m 6. \u001B[39mdplyr:::mutate_col(dots[[i]], data, mask, new_columns)\n\u001B[90m 7. \u001B[39mmask$eval_all_mutate(quo)\n\u001B[90m 8. \u001B[39m\u001B[1mdplyr\u001B[22m (local) eval()\n",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nBike hires by date\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nTime\\n\",",
        "+ ",
        "       y = \"\\nStation ID\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = start_station, y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count), fill = colour_scheme)+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = )+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count), fill = \"#009E73\")+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = )+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count), fill = \"#009E73\")+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "    theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count), col = \"#009E73\")+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "    theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col( col = \"#009E73\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "    theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#009E73\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "    theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#009E73\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% tail(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 most popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% tail(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "Loading required package: sp\n",
        "The legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% tail(n = 10) %>% ",
        "Warning message:\n",
        "package ‘sp’ was built under R version 4.2.3 \n",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble <- as_tibble(nyc_bikes_df)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "nyc_bikes_tibble %>% group_by(start_station) %>% summarise(count = n()) %>% arrange(desc(count)) %>% tail(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(start_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular start stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% tail(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count, group = gender))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_col()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'gender' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m  4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  5. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 12. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 13. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 14. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 15. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 16. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 17. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count, fill = gender))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count, fill = gender))+",
        "+ ",
        "  geom_col()+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_col()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'gender' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m  4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  5. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 12. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 13. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 14. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 15. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 16. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 17. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station, start_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_tibble %>% group_by(end_station) %>% summarise(count = n()) %>% arrange(count) %>% head(n = 10) %>% ",
        "+ ",
        "  ggplot(aes(x = reorder(end_station, -count), y = count))+",
        "+ ",
        "  geom_col(fill = \"#0072B2\")+",
        "+ ",
        "  theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "   labs(title = \"\\nTop 10 least popular end stations\\n\",",
        "+ ",
        "       x = \"\\nStation ID\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "nyc_bikes_df %>% index_by(month) %>% summarise(count = n()) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = count))+",
        "+ ",
        "  geom_point(size = 3)+",
        "+ ",
        "  theme(axis.text = element_text(size = 12)) +",
        "+ ",
        "  scale_fill_manual(values = colour_scheme) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"\\nBike Hires by Month\\n\",",
        "+ ",
        "       x = \"\\nMonth\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        " ",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;254m\u001B[36mℹ\u001B[38;5;254m In argument: `month = month`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m `month` must be a vector, not a function.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m... %>% ggplot(aes(x = month, y = count))\n\u001B[90m 13. \u001B[39m\u001B[1mdplyr\u001B[22m:::dplyr_internal_error(\"dplyr:::mutate_not_vector\", `<named list>`)\n",
        "> ",
        "nyc_bikes_df %>% index_by(month) %>% summarise(count = n()) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = count))+",
        "+ ",
        "  geom_point(size = 3)+",
        "+ ",
        "  theme(axis.text = element_text(size = 12)) +",
        "+ ",
        "  scale_fill_manual(values = colour_scheme) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"\\nBike Hires by Month\\n\",",
        "+ ",
        "       x = \"\\nMonth\\n\",",
        "+ ",
        "       y = \"\\nCount\\n\") +",
        "+ ",
        "  guides(fill = FALSE) +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;254m\u001B[36mℹ\u001B[38;5;254m In argument: `month = month`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m `month` must be a vector, not a function.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m... %>% ggplot(aes(x = month, y = count))\n\u001B[90m 13. \u001B[39m\u001B[1mdplyr\u001B[22m:::dplyr_internal_error(\"dplyr:::mutate_not_vector\", `<named list>`)\n",
        "> ",
        "View(nyc_bikes_df)",
        "> ",
        "nyc_bikes_df %>% ",
        "+ ",
        "  ggplot()+",
        "+ ",
        "  geom_bar(aes(x = month, fill = type))+",
        "+ ",
        "   theme(axis.text = element_text(size = 12))+",
        "+ ",
        "  scale_fill_manual(values = colour_scheme)+",
        "+ ",
        "  theme_minimal()+",
        "+ ",
        "  labs(",
        "+ ",
        "    ",
        "+ ",
        "    title = \"\\nService use by month and type\\n\",",
        "+ ",
        "    x = \"\\nDay of the week\\n\", ",
        "+ ",
        "    y = \"\\nCount\\n\"",
        "+ ",
        "   ",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_bar()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `compute_aesthetics()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Aesthetics are not valid data columns.\n\u001B[31m✖\u001B[38;5;254m The following aesthetics are invalid:\n\u001B[31m✖\u001B[38;5;254m `x = month`\n\u001B[36mℹ\u001B[38;5;254m Did you mistype the name of a data column or forget to add `after_stat()`?\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m  4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  5. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 12. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 13. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 14. \u001B[39mggplot2 (local) \u001B[1m\u001B[94mcompute_aesthetics(\u001B[39m\u001B[22m..., self = self\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "\nRestarting R session...\n\n"
    ]
}